Заметки и примечания:
z-буфер хранит только двумерную матрицу - размер экрана
значения в матрице(по умолчанию) - очень большие значения
потом мы считаем координату глубины для точки(через барицентрические координаты) и, если она меньше той, что
в матрице буфера, то записываем ее значение глубины и отрисовываем (добавляем в список двумерных векторов для дальнейшей отрисовки)

Примечания: класс TriangleFiller скорее всего использоваться в дальнейшем не будет, тк я рот манал разбираться как он работает
и куда там запихивать z-буфер (разбиение отрисовки на методы оказалось не очень удобной штукой в плане дальнейшей привязки z-буфера
(ну или это я дебил и не могу сообразить что к чему))

Класс Rasterization оказался удобней для привязки z-буфера к нему, ну и там реализован только необходимы нам минимум (
только вопрос насколько правильно, тк затестить это все пока не удалось, но я заставил гпт проверить код, и ей вроде все понравилось).

В классе RenderEngWithTrianglFill реализована попытка привязать класс для растеризации треугольника: созданы массивы с координатами
x,y,z для последующей передачи в метод fillTriangle. Правда пока не разобрался что делать с текстурными вершинами,
координаты которых задаются там двумерной матрицей. В классе движка я получил пока только список из двумерных векторов, в которых
хранятся координаты текстурных вершин. Так же остается открытм вопрос, где все-таки конкретно вызывать метод для
растеризации треугольника.
